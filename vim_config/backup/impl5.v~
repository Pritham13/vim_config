/*
 * Copyright: Unpublished work. (c) Siemens 2021  All rights reserved.
 */


/**
 * Minmax multi-cycle design.
 *
 * Computes, in two cycles, the min and max of four eight bit unsigned values.
 */
module impl5(clk, rst, x0_in, x1_in, x2_in, x3_in, xmin_out, xmax_out);
  input         clk;
  input         rst;
  input   [7:0] x0_in, x1_in, x2_in, x3_in;
  output  [7:0] xmin_out, xmax_out;

  reg     [7:0] r0, r1, r2, r3;
  reg     [7:0] r01_min, r23_min, r01_max, r23_max;

  assign xmin_out = r01_min;
  assign xmax_out = r23_max;

  always @(r0 or r1 or r2 or r3) begin
    r01_min <= (r0 < r1)? r0 : r1;
    r23_min <= (r2 < r3)? r2 : r3;
    r01_max <= (r0 > r1)? r0 : r1;
    r23_max <= (r2 > r3)? r2 : r3;
  end

  always @(posedge clk) begin : update
    reg sample;
    if (rst) begin
      r0 <= 0;
      r1 <= 0;
      r2 <= 0;
      r3 <= 0;
      sample <= 1;
    end else if (sample) begin
      r0 <= x0_in;
      r1 <= x1_in;
      r2 <= x2_in;
      //r3 <= x3_in + 1;
      r3 <= x3_in;
      sample <= 0;
    end else begin
      r0 <= r01_min;
      r1 <= r23_min;
      r2 <= r01_max;
      r3 <= r23_max;
      sample <= 1;
    end
  end

endmodule

// end of file
