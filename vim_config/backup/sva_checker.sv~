module sva_checker #(
        parameter FIFO_DEPTH = 4, // FIFO depth
        localparam FIFO_DEP_BITS  = $clog2(FIFO_DEPTH),
	parameter type DTYPE = int
)
(
    //clk and reset ports
    input                           aclk, 
    input                           aresetn,

    //fifo_data is an input signal of type "int"
    input                           DTYPE fifo_din,

    //Fifo ( write & read ) request signals
    input                           fifo_wreq,
    input                           fifo_rreq,

    // fifo_count stores FIFO_DEPTH+1 values (+1 for fifo_empty)
    input  [(FIFO_DEP_BITS):0]      fifo_count,

    //fifo_full or fifo_empty signal goes high whenever
    //the fifo is full or empty respectively
    input                          fifo_full, 
    input                          fifo_empty,

    //fifo_dout is the input port of datatype "int"
    input                          DTYPE fifo_dout,

    //fifo read and write acknowledgement signals
    input                          fifo_wack,
    input                          fifo_rack
);
    // Default assumptions
    default clocking @(posedge clk); endclocking
    default disable iff (reset);
   
    // assumes 
    donot_read_when_full : assume property (empty |=> !en_read);
    donot_write_when_full : assume property (full |=> !en_write);
    // Covers
    can_full:  cover property (full == 1'b1);
    can_empty: cover property (empty == 1'b1);
    
// Properties
endmodule
