
// ###############################################################################
// Copyright (c)  Verikwest Systems Inc -- All Rights Reserved
//
//  NOTICE:  All information contained herein is, and remains the property of
//  Verikwest Systems Inc or its licensors and is subject to license terms.
//  The intellectual and technical concepts contained
//  herein are proprietary to Verikwest Systems Inc. and may be covered by U.S.
//  and Foreign Patents, patents in process, and are protected by trade secret
//  or copyright law.  Dissemination of this information or reproduction of this
//  material is strictly forbidden unless prior written permission is obtained
//  from Verikwest Systems Inc.
// ##############################################################################

// Name :  SIMPLE WR & RD 
// Task :  run_test_1
// Description:
//      Driving: write transaction followed by Read transaction from chiplet_0
//      Monitoring: responses of write and read transaction from chiplet_1
//      Expectation: responses should have AHB_OKAY and read data 
//                  should match with write data.
//      here data is 32 bits i.e 4 bytes


task run_test_1();

   req_data_s       wr_data;
   req_data_s       rd_data;
   //rdata_info_s     rd_resp_info;
   resp_data_s      wr_resp_info;
   resp_data_s      rd_resp_info;
   //bresp_info_s     wr_resp_info;

   wait_for_one_clk_cycle();
   wait_for_one_clk_cycle();

   wr_data.haddr = 32'h01;        //Enter address here
   wr_data.hwdata =32'hAB ;       //Enter write data here
   drive_ahb_write_transaction(wr_data);

   get_wr_resp(wr_resp_info);

   rd_data.haddr = 32'hFF;
   drive_ahb_read_transaction(rd_data);

   get_rd_resp(rd_resp_info);
    
   // CHECK_PHASE
   // We are going to check, if Read and write response
   // came back as OK and the data from the read transaction

   if ((wr_resp_info.hresp == AHB_OKAY) &&
       (rd_resp_info.hresp  == AHB_OKAY ) &&
       (rd_resp_info.hrdata == 32'hAB)   //Enter write data here
    ) 
     announce_test_success("test_1", "single wr then rd");
   else
     announce_test_failure("test_1", "single wr then rd");
   
endtask // run_test_1

